@using ERP_GraduateManagement.DTOs.Response
@using System.Net.Http.Json
@using MudBlazor
@inject NavigationManager NavigationManager
@inject IDialogService DialogService



<MudTable Items="@_graduates">
    <HeaderContent>
        <MudTh>Full Name</MudTh>
        <MudTh>Registration No.</MudTh>
        <MudTh>Contact Number</MudTh>
        <MudTh>Degree</MudTh>
        <MudTh>Current Company</MudTh>
        <MudTh>Position</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="FullName">@context.FullName</MudTd>
        <MudTd DataLabel="RegNo">@context.RegNo</MudTd>
        <MudTd DataLabel="ContactNo">@context.ContactNo</MudTd>
        <MudTd DataLabel="Degree">@context.Degree</MudTd>
        <MudTd DataLabel="Company">@context.CurrentCompany</MudTd>
        <MudTd DataLabel="Position">@context.CurrentJobPosition</MudTd>
        <MudTd DataLabel="">
                <MudFab Color="Color.Primary" OnClick="@(()=>EditGraduate(context.GraduateId))"
                        StartIcon="@Icons.Material.Filled.Edit" Size="Size.Small" />
                <MudFab Color="Color.Warning" 
                    StartIcon="@Icons.Material.Filled.Delete" Size="Size.Small" />                
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>

</MudTable>

    @code {
    private HttpClient Http = new HttpClient();

    private List<GetGraduateResponse> _graduates = new List<GetGraduateResponse>();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            _graduates = await Http.GetFromJsonAsync<List<GetGraduateResponse>>("https://localhost:7010/api/Graduates/");
        }
        catch(Exception ex)
        {
            _graduates = null;
        }
    }

    async Task EditGraduate(Guid graduateId)
    {
        var parameters = new DialogParameters<EditGraduateDialog> { {x => x.graduateId, graduateId } };

        var options = new DialogOptions
        {
                MaxWidth = MaxWidth.ExtraSmall,
                FullWidth = true,
                Position = DialogPosition.CenterLeft,
                CloseOnEscapeKey = true,
                CloseButton = true
         };

        var dialog = await DialogService.ShowAsync<EditGraduateDialog>("Save", parameters,options);
        var result = await dialog.Result;

        if(!result.Canceled)
        {
            
        }
    }

    
}
