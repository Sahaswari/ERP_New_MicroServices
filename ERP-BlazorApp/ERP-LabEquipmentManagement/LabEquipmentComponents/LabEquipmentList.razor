@using ERP_LabEquipmentManagement.DTOs.Response
@using System.Net.Http.Json
@using MudBlazor

<MudTable Items="@_labEquipment">
    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh>Registration No.</MudTh>
        <MudTh>Lab Equipment Name</MudTh>
        <MudTh>Is Active or Not</MudTh>
        <MudTh>Category</MudTh>
        <MudTh>Location</MudTh>
        <MudTh>Purchased Date</MudTh>
        <MudTh>Price</MudTh>
        <MudTh>Description</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ID">@context.Id</MudTd>
            <MudTd DataLabel="RegNo">@context.EquipmentRegisterId</MudTd>
            <MudTd DataLabel="Name">@context.EquipmentName</MudTd>
            <MudTd DataLabel="Condition">@context.IsActive</MudTd>
            <MudTd DataLabel="Category">@context.SelectCategory</MudTd>
            <MudTd DataLabel="Location">@context.Location</MudTd>
            <MudTd DataLabel="Purchased Date">@context.PurchasedDate</MudTd>
            <MudTd DataLabel="Price">@context.Price</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>

    </MudTable>

@code {
    private HttpClient Http = new HttpClient();

    private List<GetLabEquipmentResponse> _labEquipment = new List<GetLabEquipmentResponse>();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            _labEquipment = await Http.GetFromJsonAsync<List<GetLabEquipmentResponse>>("https://localhost:7276/api/LabEquipment");
        }
        catch (Exception ex)
        {
            _labEquipment = null;
        }
    }

}
